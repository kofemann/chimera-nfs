<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.hazelcast.com/schema/spring
           http://www.hazelcast.com/schema/spring/hazelcast-spring.xsd">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:///pnfs/etc/ds.properties</value>
            </list>
        </property>
        <property name="environment">
            <bean class="org.springframework.core.env.StandardEnvironment" />
        </property>
    </bean>

    <!--
        Convert protperies with multiple values separated by comma into an array of strings:
        key=value1,value2,value3 : String[] {value1, value2, value3}
    -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.lang.String[]"
                       value="org.springframework.beans.propertyeditors.StringArrayPropertyEditor" />
            </map>
        </property>
    </bean>



    <hz:client id="hz-client">
        <hz:spring-aware/>
        <hz:group name="pnfs-community"/>

        <hz:properties>
            <hz:property name="hazelcast.logging.type">slf4j</hz:property>
            <hz:property name="hazelcast.discovery.enabled">false</hz:property>
            <hz:property name="hazelcast.phone.home.enabled">false</hz:property>
        </hz:properties>

        <hz:network connection-attempt-limit="3"
                    connection-attempt-period="30000" connection-timeout="1000"
                    redo-operation="false" smart-routing="false">
            <hz:member>hz</hz:member>
        </hz:network>

        <hz:near-cache name="open-stateid"
                       cache-local-entries="false"
                       eviction-policy="LFU"
                       in-memory-format="BINARY"
                       invalidate-on-change="true"
                       max-idle-seconds="0"
                       time-to-live-seconds="90" />
    </hz:client>

    <hz:map id="open-stateid" name="open-stateid" instance-ref="hz-client" />


    <!-- create data directory for DS -->
    <bean id="ds-data-dir" class="java.io.File" init-method="mkdirs">
        <constructor-arg value="${base}" />
    </bean>

    <bean id="ds-data-pool" class="org.dcache.nfs.IoChannelCache" init-method="init">
        <property name="base" ref="ds-data-dir" />
        <property name="maxSize" value="1024" />
        <property name="lastAccess" value="30" />
    </bean>

    <!--
        NFSv4.1 Operation factory
    -->
    <bean id="ds-factory" class="org.dcache.nfs.EDSNFSv4OperationFactory">
        <description>DS operation factory</description>
        <constructor-arg ref="open-stateid" />
        <constructor-arg ref="ds-data-pool" />
    </bean>

    <!--
       NFSv4.1 DS
    -->
    <bean id="ds" class="org.dcache.nfs.v4.NFSServerV41Factory">
        <description>NFSv4.1 MDS server</description>
        <property name="operationFactory" ref="ds-factory"/>
    </bean>

    <!-- NFSv4 programm -->
    <bean id="nfsv4-programm" class="org.dcache.oncrpc4j.rpc.OncRpcProgram">
        <description>NFSv4.1 programm number</description>
        <constructor-arg index="0" value="100003" />
        <constructor-arg index="1" value="4" />
    </bean>

    <bean id="ssl-context-builder" class="org.dcache.nfs.SslContextFactoryBean">
        <description>SSL Context factory</description>
        <property name="certFilePath" value="/hostcert.pem"/>
        <property name="keyFilePath" value="/hostkey.pem"/>
        <property name="trustedCaBundle" value="/ca-chain.pem"/>
    </bean>

    <!--
        ONC RPC service
    -->
    <bean id="oncrpcsvc-builder" class="org.dcache.oncrpc4j.spring.OncRpcSvcFactoryBean">
        <description>Onc RPC service builder for MDS</description>
        <property name="port" value="${port}"/>
        <property name="useTCP" value="true"/>
        <property name="autoPublish" value="false"/>
        <property name="enableJmx" value="true"/>
        <property name="useWorkerPool" value="true"/>
        <property name="sslContext" ref="ssl-context-builder" />
        <property name="enableStartTLS" value="true" />
    </bean>

    <bean id="oncrpcsvc" class="org.dcache.oncrpc4j.rpc.OncRpcSvc"
          init-method="start" destroy-method="stop" depends-on="data-server">
        <description>Onc RPC service for MDS</description>
        <constructor-arg ref="oncrpcsvc-builder"/>
        <property name="programs">
            <map>
                <entry key-ref="nfsv4-programm" value-ref="ds"/>
            </map>
        </property>
    </bean>

    <!--
        NFSv4.1 pNFS Data Server manager
    -->
    <bean id="data-server" class="org.dcache.nfs.DataServer" init-method="init"
          destroy-method="destroy">
        <description>Data Server</description>
        <property name="curatorFramework" ref="zk-curator" />
        <property name="ioChannelCache" ref="ds-data-pool" />
        <property name="port" value="${port}" />
        <property name="idFile" value="${idfile}" />
        <property name="bepPort" value="${bepPort}" />
    </bean>

    <bean id="zk-curator-factory" class="org.dcache.nfs.zk.Curator4Spring">
        <property name="connectString" value="${ZOOKEEPER_CONNECT}" />
    </bean>

    <bean id="zk-curator" factory-bean="zk-curator-factory" factory-method="getCurator" destroy-method="close"/>

    <beans profile="krb5">
        <bean id="rpc-login-service" class="org.dcache.nfs.RpcGssLogin"/>

        <bean id="gss-manager" class="org.dcache.oncrpc4j.rpc.gss.GssSessionManager">
            <constructor-arg index="0" ref="rpc-login-service" />
            <constructor-arg index="1" value="${KRB5_SVC_PRINCIPAL}" />
            <constructor-arg index="2" value="/pnfs/etc/krb5.keytab" />
        </bean>
    </beans>

</beans>
